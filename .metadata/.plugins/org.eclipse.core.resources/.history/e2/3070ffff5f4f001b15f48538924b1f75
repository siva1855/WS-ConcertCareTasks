package com.concertcare.sivatask.serviceimpl;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.concertcare.sivatask.model.User;
import com.concertcare.sivatask.repsitory.UserRepository;
import com.concertcare.sivatask.service.UserService;

@Service
public class UserServiceImpl implements UserService,UserDetailsService {

	@Autowired
	private UserRepository userRepository;

	@Autowired
	private BCryptPasswordEncoder pwdencoder;

	@Override
	public Integer saveUser(User user) {
		String password = user.getUserPassword();
		password = pwdencoder.encode(password);
		user.setUserPassword(password);
		return userRepository.save(user).getUserId();
	}
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		//get model class User based on USerName
		User user=userRepository.findByUserName(username);
		
		//Roles to Set<GrantAuthorities>
		Set<GrantedAuthority> authorities=new HashSet<>();
		List<String> roles=user.getUserRoles();
		for(String role:roles) {
			authorities.add(new SimpleGrantedAuthority(role));
		}
		
		//return S/f User
		org.springframework.security.core.userdetails.User usr=new org.springframework.security.core.userdetails.User(user.getUserName(), user.getPwd(), authorities);
		
		
		return usr;
	}

}
